import java.io.*;
import java.util.*;

public class Main{
  // right greater index
    public static int[] rightGreaterIndex(int[] arr){
        int n = arr.length;
        int[] ans = new int[n];
        Stack<Integer> st = new Stack<>();
        st.push(0);
        for(int i=1;i<arr.length;i++){
            while(st.size()>0 && arr[st.peek()] < arr[i]){
                int idx  = st.pop();
                ans[idx] = i;
            }
            st.push(i);
        }
        while(st.size()>0){
            ans[st.pop()] = arr.length;
        } 
         
       return ans;
    }

    public static void slidingWindowMax(int[] a,int k){
        int[] rgi = rightGreaterIndex(a);

        int j = 0;
        for(int i=0;i<=a.length-k;i++){
            if(i > j){
                j = i;
            }
            while(i+k > rgi[j]){
                j = rgi[j];
            }
            System.out.println(a[j]);
        }
    }

public static void main(String[] args) throws Exception {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

    int n = Integer.parseInt(br.readLine());
    int[] a = new int[n];
    for(int i = 0; i < n; i++){
       a[i] = Integer.parseInt(br.readLine());
    }
    int k = Integer.parseInt(br.readLine());

    slidingWindowMax(a,k);
 }
}