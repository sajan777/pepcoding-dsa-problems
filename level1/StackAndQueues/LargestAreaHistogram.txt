import java.io.*;
import java.util.*;

public class Main{
  

public static void main(String[] args) throws Exception {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

    int n = Integer.parseInt(br.readLine());
    int[] a = new int[n];
    for(int i = 0; i < n; i++){
       a[i] = Integer.parseInt(br.readLine());
    }
    
    int[] lsi = lsi(a);
    int[] rsi = rsi(a);
    int area = 0;

    // if asked for index of largest area
    // int st = 0;
    // int end = 0;

    for(int i=0;i<lsi.length;i++){
        int width = rsi[i]-lsi[i]-1;
        int height = a[i];
        //area = Math.max(area,width*height);

        if(area < width*height){
            area = width*height;
            // st = lsi[i];
            // end = rsi[i];
        }
    }
    System.out.println(area);
   
 }
    public static int[] lsi(int[] arr){
        int n = arr.length;
        int[] ans = new int[n];
        Stack<Integer> st = new Stack<>();
        st.push(arr.length-1);
        for(int i=arr.length-2;i>=0;i--){
            while(st.size()>0 && arr[st.peek()] > arr[i]){
                ans[st.pop()] = i;
            }
            st.push(i);
        }
        while(st.size()>0){
            ans[st.pop()] = -1;
        }
        return ans;
    }
    
    public static int[] rsi(int[] arr){
        int n = arr.length;
        int[] ans = new int[n];
        Stack<Integer> st = new Stack<>();
        st.push(0);
        for(int i=1;i<arr.length;i++){
            while(st.size()>0 && arr[st.peek()] > arr[i]){
                ans[st.pop()] = i;
            }
            st.push(i);
        }
        while(st.size()>0){
            ans[st.pop()] = arr.length;
        } 
         
       return ans;
    }
}